# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'OpenPGP/ui/import_export_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtWidgets import QMessageBox
import os
from OpenPGP.asymmetric_encryption.keys.privatekey import PrivateKey
from OpenPGP.asymmetric_encryption.keys.publickey import PublicKey
from OpenPGP.users.users_db import usersDB
from OpenPGP.asymmetric_encryption.keys.privatekeyring import private_keyring
from OpenPGP.asymmetric_encryption.keys.publickeyring import public_keyring


class Ui_import_export_window(object):

    def open_error(self, error_message):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Critical)
        msg.setText(error_message)
        msg.setWindowTitle("Error!")
        msg.setStandardButtons(QMessageBox.Ok)
        msg.exec_()

    def __init__(self):
        self.filename = None
        self.passphrase = None

    def open_import_keys(self):
        self.stackedWidget.setCurrentWidget(self.import_page)

    def open_export_keys(self):
        self.load_private_keyring()
        self.stackedWidget.setCurrentWidget(self.export_page)

    def upload_file(self):
        options = QFileDialog.Options()
        filename, _ = QFileDialog.getOpenFileName(None, "Select .pem file", "..\\asymmetric_encryption\\pem",
                                                  "PEM Files (*.pem)", options=options)
        self.selected_file.setText(os.path.basename(filename))
        self.filename = filename

    def import_key(self):
        try:
            self.passphrase = self.import_passphrase.text()
            if not self.public_part_import.isChecked() and not self.private_part_import.isChecked():
                self.open_error("Select one radio button!")
                return
            if 'pem/public_keyring' in self.filename and self.public_part_import.isChecked():
                status, public_key = public_keyring.import_key(self.filename)
            elif self.public_part_import.isChecked():
                if "/" + usersDB.logged_in_user.email + "_" in self.filename:
                    status, public_key = private_keyring.import_public(self.filename, self.passphrase, public_keyring)
                else:
                    status, public_key = 1, None
            elif self.private_part_import.isChecked():
                if "/" + usersDB.logged_in_user.email + "_" in self.filename:
                    status, private_key = private_keyring.import_key(self.filename, self.passphrase)
                else:
                    status, public_key = 1, None

            if status == 0:
                self.import_result.setText("Import successful")
            else:
                self.import_result.setText("ERROR: Faulty .pem file or passphrase")
        except Exception as e:
            self.import_result.setText("ERROR: Faulty .pem file or passphrase")


    def load_private_keyring(self):
        row = 0
        logged_in_userID = usersDB.logged_in_user.name + ":" + usersDB.logged_in_user.email
        self.private_keyring_table.setRowCount(len(private_keyring.get_keys_by_userID(logged_in_userID)))

        for key in private_keyring.get_keys_by_userID(logged_in_userID):
            self.private_keyring_table.setItem(row, 0, QtWidgets.QTableWidgetItem(str(key.timestamp)))
            self.private_keyring_table.setItem(row, 1, QtWidgets.QTableWidgetItem(str(key.keyID)))
            self.private_keyring_table.setItem(row, 2, QtWidgets.QTableWidgetItem(key.repr_public_key()))
            self.private_keyring_table.setItem(row, 3, QtWidgets.QTableWidgetItem(str(key.encrypted_private_key)))
            self.private_keyring_table.setItem(row, 4, QtWidgets.QTableWidgetItem(str(key.userID)))

            button = QtWidgets.QPushButton("Export")
            button.clicked.connect(lambda _, i=row: self.export_key(i))
            self.private_keyring_table.setCellWidget(row, 5, button)
            row += 1

        self.private_keyring_table.resizeColumnsToContents()

    def export_key(self, row):
        logged_in_userID = usersDB.logged_in_user.name + ":" + usersDB.logged_in_user.email
        self.passphrase = self.export_passphrase.text()
        if not self.public_part_export.isChecked() and not self.private_part_export.isChecked():
            self.open_error("Check one radio button!")
            return
        if self.passphrase != usersDB.logged_in_user.password:
            self.open_error("Wrong password!")
            return
        if self.public_part_export.isChecked():
            public_key = private_keyring.get_keys_by_userID(logged_in_userID)[row].public_key
            pu = PublicKey(
                public_key=public_key,
                userID=logged_in_userID
            )
            pu.export_key()
        elif self.private_part_export.isChecked():
            private_key = private_keyring.get_keys_by_userID(logged_in_userID)[row]
            private_key.export_key(self.passphrase)


    def setupUi(self, import_export_window):
        import_export_window.setObjectName("import_export_window")
        import_export_window.resize(945, 852)
        self.centralwidget = QtWidgets.QWidget(import_export_window)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 951, 80))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(100, 0, 100, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.import_button = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.import_button.setObjectName("import_button")
        self.horizontalLayout.addWidget(self.import_button)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.horizontalLayout.addItem(spacerItem)
        self.export_button = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.export_button.setObjectName("export_button")
        self.horizontalLayout.addWidget(self.export_button)
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 80, 941, 731))
        self.stackedWidget.setObjectName("stackedWidget")
        self.empty = QtWidgets.QWidget()
        self.empty.setObjectName("empty")
        self.stackedWidget.addWidget(self.empty)
        self.import_page = QtWidgets.QWidget()
        self.import_page.setObjectName("import_page")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.import_page)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(50, 100, 841, 421))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(100, 20, 100, 30)
        self.verticalLayout.setSpacing(20)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.upload_button = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.upload_button.setObjectName("upload_button")
        self.verticalLayout.addWidget(self.upload_button)
        self.selected_file = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.selected_file.setText("")
        self.selected_file.setObjectName("selected_file")
        self.verticalLayout.addWidget(self.selected_file)
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.import_passphrase = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.import_passphrase.setEchoMode(QtWidgets.QLineEdit.Password)
        self.import_passphrase.setObjectName("import_passphrase")
        self.verticalLayout.addWidget(self.import_passphrase)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.public_part_import = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.public_part_import.setObjectName("public_part_import")
        self.horizontalLayout_3.addWidget(self.public_part_import)
        self.private_part_import = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.private_part_import.setObjectName("private_part_import")
        self.horizontalLayout_3.addWidget(self.private_part_import)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.import_key_button = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.import_key_button.setObjectName("import_key_button")
        self.verticalLayout.addWidget(self.import_key_button)
        self.import_result = QtWidgets.QLabel(self.import_page)
        self.import_result.setGeometry(QtCore.QRect(50, 580, 841, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.import_result.setFont(font)
        self.import_result.setText("")
        self.import_result.setObjectName("import_result")
        self.stackedWidget.addWidget(self.import_page)
        self.export_page = QtWidgets.QWidget()
        self.export_page.setObjectName("export_page")
        self.label_3 = QtWidgets.QLabel(self.export_page)
        self.label_3.setGeometry(QtCore.QRect(-310, -309, 531, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.private_keyring_table = QtWidgets.QTableWidget(self.export_page)
        self.private_keyring_table.setGeometry(QtCore.QRect(40, 70, 871, 391))
        self.private_keyring_table.setObjectName("private_keyring_table")
        self.private_keyring_table.setColumnCount(6)
        self.private_keyring_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.private_keyring_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.private_keyring_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.private_keyring_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.private_keyring_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.private_keyring_table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.private_keyring_table.setHorizontalHeaderItem(5, item)
        self.label_4 = QtWidgets.QLabel(self.export_page)
        self.label_4.setGeometry(QtCore.QRect(-270, 119, 241, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.export_page)
        self.label_5.setGeometry(QtCore.QRect(40, 20, 631, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.export_page)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(40, 480, 871, 51))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_7 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_2.addWidget(self.label_7)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.export_passphrase = QtWidgets.QLineEdit(self.horizontalLayoutWidget_2)
        self.export_passphrase.setEchoMode(QtWidgets.QLineEdit.Password)
        self.export_passphrase.setObjectName("export_passphrase")
        self.horizontalLayout_2.addWidget(self.export_passphrase)
        self.export_status = QtWidgets.QLabel(self.export_page)
        self.export_status.setGeometry(QtCore.QRect(40, 640, 861, 31))
        self.export_status.setText("")
        self.export_status.setObjectName("export_status")
        self.public_part_export = QtWidgets.QRadioButton(self.export_page)
        self.public_part_export.setGeometry(QtCore.QRect(40, 560, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.public_part_export.setFont(font)
        self.public_part_export.setObjectName("public_part_export")
        self.private_part_export = QtWidgets.QRadioButton(self.export_page)
        self.private_part_export.setGeometry(QtCore.QRect(170, 560, 95, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.private_part_export.setFont(font)
        self.private_part_export.setObjectName("private_part_export")
        self.stackedWidget.addWidget(self.export_page)
        import_export_window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(import_export_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 945, 26))
        self.menubar.setObjectName("menubar")
        import_export_window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(import_export_window)
        self.statusbar.setObjectName("statusbar")
        import_export_window.setStatusBar(self.statusbar)

        self.import_button.clicked.connect(lambda: self.open_import_keys())
        self.upload_button.clicked.connect(self.upload_file)
        self.import_key_button.clicked.connect(lambda: self.import_key())
        self.export_button.clicked.connect(lambda: self.open_export_keys())

        self.retranslateUi(import_export_window)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(import_export_window)

    def retranslateUi(self, import_export_window):
        _translate = QtCore.QCoreApplication.translate
        import_export_window.setWindowTitle(_translate("import_export_window", "Import/export keys"))
        self.import_button.setText(_translate("import_export_window", "Import key"))
        self.export_button.setText(_translate("import_export_window", "Export key"))
        self.label.setText(_translate("import_export_window", "Select .pem file"))
        self.upload_button.setText(_translate("import_export_window", "Select"))
        self.label_2.setText(_translate("import_export_window", "If key is private, input passphrase and select part"))
        self.public_part_import.setText(_translate("import_export_window", "Public key"))
        self.private_part_import.setText(_translate("import_export_window", "Key pair"))
        self.import_key_button.setText(_translate("import_export_window", "Import"))
        self.label_3.setText(_translate("import_export_window", "Private keyring"))
        item = self.private_keyring_table.horizontalHeaderItem(0)
        item.setText(_translate("import_export_window", "Timestamp"))
        item = self.private_keyring_table.horizontalHeaderItem(1)
        item.setText(_translate("import_export_window", "Key ID"))
        item = self.private_keyring_table.horizontalHeaderItem(2)
        item.setText(_translate("import_export_window", "Public key"))
        item = self.private_keyring_table.horizontalHeaderItem(3)
        item.setText(_translate("import_export_window", "Encrypted private key"))
        item = self.private_keyring_table.horizontalHeaderItem(4)
        item.setText(_translate("import_export_window", "User ID"))
        item = self.private_keyring_table.horizontalHeaderItem(5)
        item.setText(_translate("import_export_window", "Export"))
        self.label_4.setText(_translate("import_export_window", "Public keyring"))
        self.label_5.setText(_translate("import_export_window", "Private keyring"))
        self.label_7.setText(_translate("import_export_window", "Passphrase"))
        self.public_part_export.setText(_translate("import_export_window", "Public key"))
        self.private_part_export.setText(_translate("import_export_window", "Key pair"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    import_export_window = QtWidgets.QMainWindow()
    ui = Ui_import_export_window()
    ui.setupUi(import_export_window)
    import_export_window.show()
    sys.exit(app.exec_())
